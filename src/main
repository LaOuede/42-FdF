/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   main.c                                             :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: gwenolaleroux <gwenolaleroux@student.42    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/03/30 08:05:07 by gle-roux          #+#    #+#             */
/*   Updated: 2023/03/30 19:41:27 by gwenolalero      ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "../includes/fdf.h"
#include "../libft/includes/libft.h"

static mlx_image_t	*g_image;

int32_t	ft_pixel(int32_t r, int32_t g, int32_t b, int32_t a)
{
	return (r << 24 | g << 16 | b << 8 | a);
}

void	ft_color(void *param)
{
	uint32_t	i;
	uint32_t	y;
	uint32_t	color;

	i = 0;
	(void) param;
	while (i < g_image->width)
	{
		y = 0;
		while (y < g_image->height)
		{
			color = ft_pixel(61, 165, 176, 75);
			mlx_put_pixel(g_image, i, y, color);
			y++;
		}
		i++;
	}
}

void	ft_hook(void *param)
{
	mlx_t	*mlx;

	mlx = param;
	if (mlx_is_key_down(mlx, MLX_KEY_ESCAPE) || mlx_is_key_down(mlx, MLX_KEY_Q))
		mlx_close_window(mlx);
	if (mlx_is_key_down(mlx, MLX_KEY_UP))
		g_image->instances[0].y -= 5;
	if (mlx_is_key_down(mlx, MLX_KEY_DOWN))
		g_image->instances[0].y += 5;
	if (mlx_is_key_down(mlx, MLX_KEY_LEFT))
		g_image->instances[0].x -= 5;
	if (mlx_is_key_down(mlx, MLX_KEY_RIGHT))
		g_image->instances[0].x += 5;
}

int32_t	main(int32_t argc, const char **argv)
{
	mlx_t				*mlx;

	(void) argc;
	(void) argv;
	mlx = mlx_init(WIDTH, HEIGHT, "~ FdF ~ gle-roux ~", false);
	if (!mlx)
	{
		puts(mlx_strerror(mlx_errno));
		return (EXIT_FAILURE);
	}
	g_image = mlx_new_image(mlx, 128, 128);
	if (!g_image)
	{
		mlx_close_window(mlx);
		puts(mlx_strerror(mlx_errno));
		return (EXIT_FAILURE);
	}
	if (mlx_image_to_window(mlx, g_image, 0, 0) == -1)
	{
		mlx_close_window(mlx);
		puts(mlx_strerror(mlx_errno));
		return (EXIT_FAILURE);
	}
	mlx_loop_hook(mlx, ft_color, mlx);
	mlx_loop_hook(mlx, ft_hook, mlx);
	mlx_loop(mlx);
	mlx_terminate(mlx);
	return (EXIT_SUCCESS);
}

/* #include <fcntl.h>  //O_RDONLY
int	main(void)
{
	int		fd;
	char	*line;

	fd = open("./test_maps/pyramide.fdf", O_RDONLY);
	while (1)
	{
		line = get_next_line(fd);
		if (line == NULL)
			break ;
		printf("%s", line);
		if (line)
			free(line);
	}
	close (fd);
	return (0);
} */
